/**
  * addExecRight v1.0.0
  * (c) 2018-2022 ymc
  * @license MIT
  */
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("node:fs"),t=require("node:child_process");function n(e){return e.split(/\r?\n/).map((e=>e.trim())).filter((e=>e)).join("\n")}const i=(e,i,o)=>new Promise(((s,a)=>{o||(o=i,i=e,e="");const r=((e,t=" ")=>Array.isArray(e)?e.join(t):e)(i);(o.exec?o.exec:t.exec)(`${e=e?`${e} ${r}`:`${r}`}`,o,((e,t,i)=>{const{fixUnreadbleCode:r}=o;if(r){const{iconvDesEncoding:e,iconvSrcEncoding:n}=o;t&&(t=r(t,e,n)),i&&(i=r(i,e,n))}e&&o.exitWhenErr&&a(e),o.noTrimOut||(t=n(t),i=n(i)),o.rejectStderr&&(i&&a(e),s(t)),s({stdout:t,stderr:i})}))})),o={exec:t.exec};function s(e){
/**
  * extendString v1.0.0
  * (c) 2018-2022 ymc
  * @license MIT
  */
return function(e){return e.replace(/(?:^\w|[A-Z_-]|\b\w)/g,((e,t)=>{let n="";return n=e.replace(/[-_]+/g," "),n=0!==t?n.replace(/[A-Z]/," $&"):n,0===t?n.toUpperCase():n.toLowerCase()})).replace(/\s+/g," ")}(e).replace(/(?:^\w|[A-Z]|\b\w)/g,((e,t)=>0===t?e.toLowerCase():e.toUpperCase())).replace(/\s+/g,"")}
/**
  * cliParam v1.0.0
  * (c) 2018-2022 ymc
  * @license MIT
  */function a(e,t={}){let n={};const i=Object.keys(e).map((t=>e[t])),o={slim:!0,modeStyle:"cli",...t};"string"===o.mode&&(o.slim=!0);for(let e=0;e<i.length;e+=1){const t=i[e],{name:a,type:r,value:c,desc:l}=t,[u,d]=a.split(/,/).map((e=>e.trim().replace(/^-*/gi,""))),h=u.length>1?u:d;if(h){if(o.noAutoCamelize||(n[s(h)]=c),o.slim)continue;n[h]=c}n[u]=c}return"string"===o.mode&&(n=function(e,t){const n={modeStyle:"cli",...t};let i="";return"string"===n.mode&&"cli"===n.modeStyle&&(i=Object.keys(e).map((t=>t.length>1?`--${t}=${e[t]}`:`-${t}=${e[t]}`)).join(" ")),"string"===n.mode&&"httpquery"===n.modeStyle&&(i=Object.keys(e).map((t=>`${t}=${e[t]}`)).join("&")),"string"===n.mode&&"swithoption"===n.modeStyle&&(i=Object.keys(e).map((t=>`${t}=${e[t]}`)).join(";")),i}(n,o)),n}function r(e,t={}){return a(e,t)}function c(e,t={}){let n;const{entrys:i}=t;return n=e.flags||i&&i.notOnlyFlags?e.flags:e,function(e={},t={}){const n={slim:!0,...t};return n.noAutoCamelize||Object.keys(e).forEach((t=>{const i=s(t);i!==t&&(e[i]=e[t],n.slim&&delete e[t])})),e}(n,t)}
/**
  * limitAsyncHandle v1.0.0
  * (c) 2018-2022 ymc
  * @license MIT
  */const{log:l}=console;class u{constructor(e){this.init(e)}init(e){return this._max=e,this._count=0,this._taskQueue=[],this._debug=!1,this._cb=null,this}call(e,...t){return new Promise(((n,i)=>{const o=this._createTask(e,t,n,i);this._count>=this._max?this._taskQueue.push(o):o()}))}_createTask(e,t,n,i){return()=>{e(...t).then(n).catch(i).finally((()=>{this._next()})),this._nextTick()}}_next(){if(this._count-=1,this._taskQueue.length){this._taskQueue.shift()()}else this._debug&&l("task count = ",this._count),this._cb&&this._cb()}_nextTick(){this._count+=1,this._debug&&l("task count = ",this._count)}}new u;
/**
  * kindOf v1.0.0
  * (c) 2018-2022 ymc
  * @license MIT
  */
const{toString:d}=Object.prototype,h=(p=Object.create(null),e=>{const t=d.call(e);return p[t]||(p[t]=t.slice(8,-1).toLowerCase())});var p;const{log:m}=console;function f(){return[{name:"-h,--help",type:"boolean",value:!1,desc:"info help"},{name:"-v,--version",type:"string",value:"1.0.0",desc:"info version"},{name:"-p,--bin-path",type:"string",value:"bin",desc:"the location of bin path"},{name:"--ext",type:"string",value:".js,.sh",desc:"only for matched file extention"},{name:"--update-by-git",type:"boolean",value:!1,desc:"run git update-index --chmod=+x xx or not"},{name:"--check-git",type:"boolean",value:!1,desc:"check if git init"},{name:"--verbose",type:"boolean",value:!1,desc:"info file right info or not"},{name:"--file-head",type:"string",value:"",desc:"add file head, custom file head"}]}exports.main=async function(t={}){const n={...r([{name:"-h,--help",type:"boolean",value:!1,desc:"info help"},{name:"-v,--version",type:"string",value:"1.0.0",desc:"info version"},{name:"-p,--bin-path",type:"string",value:"bin",desc:"the location of bin path"},{name:"--ext",type:"string",value:".js,.sh",desc:"only for matched file extention"},{name:"--update-by-git",type:"boolean",value:!1,desc:"run git update-index --chmod=+x xx or not"},{name:"--check-git",type:"boolean",value:!1,desc:"check if git init"},{name:"--verbose",type:"boolean",value:!1,desc:"info file right info or not"},{name:"--file-head",type:"string",value:"",desc:"add file head, custom file head"}]),...c(t)},s=n.binPath;let a,l=e.readdirSync(s).map((e=>`${s}/${e}`)).filter((t=>e.statSync(t).isFile()));if(n.ext){const{ext:e}=n,t=e.split(",").map((e=>new RegExp(`${e}$`)));l=l.filter((e=>t.some((t=>t.test(e)))))}
/**
  * promiseAll v1.0.0
  * (c) 2018-2022 ymc
  * @license MIT
  */
var d,p;let f;a=l.map((e=>{return t={...n,file:e},async()=>{let e,n=`chmod +x ${t.file}`;return m(`[info] run: ${n}`),e=await i(n,o),t.updateByGit&&(n=`git update-index --chmod=+x ${t.file}`,m(`[info] run: ${n}`),e=await i(n,o)),e};var t})),await(d=a,p=3,new Promise(((e,t)=>{const n=p||d.length,i=new u(n),o=[],s=t=>{let n=d[t];return"asyncfunction"===h(n)?n=n():"function"===h(n)&&(n=Promise.resolve(n())),n.then((e=>{i._debug?o[t]={index:t,data:e,state:"ok"}:o[t]=e}),(e=>{i._debug?o[t]={index:t,state:"no",error:e}:o[t]=e})).finally((()=>{i._cb=()=>{
//! this._taskQueue.length && this._count===0
0===i._count&&e(o)}}))};for(let e=0;e<d.length;e+=1)i.call(s,e)}))),n.verbose||(f=await i(`ls ${s} -l`,o),m(f))},exports.param=f;
