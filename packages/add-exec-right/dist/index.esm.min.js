/**
  * addExecRight v1.0.0
  * (c) 2018-2022 ymc
  * @license MIT
  */
import{readdirSync as t,statSync as e}from"node:fs";import{exec as i,execOpts as n}from"@ymc/run-bash";import o from"@ymc/promise-all";import{TextStream as a}from"@ymc/text-stream-io";const{log:l}=console;function s(t){return function(...e){t&&l(...e)}}const f=s(!0);async function r(l={}){const r={binPath:"bin",ext:".js,.sh",...l},c=s(r.logInfo);s(r.logTask)("[task] add exec rights to files"),c("[info] read file list");const d=r.binPath;let m=t(d).map((t=>`${d}/${t}`)).filter((t=>e(t).isFile()));if(c("[info] filter file list when ext passed"),r.ext){const{ext:t}=r,e=t.split(",").map((t=>new RegExp(`${t}$`)));m=m.filter((t=>e.some((e=>e.test(t)))))}const p=t=>async()=>{let e;t.onFileHead&&await async function(t={}){const e={fileHead:"#!/usr/bin/env node",...t};let i,n;const o=new a;o.init(e.loc),i=await o.read(""),i=i.split(/\r?\n/),[n]=i,n&&!/^#!/i.test(n)&&("del"===e.action?i.shift():i.unshift(e.fileHead));i=i.join("\n"),o.init(e.loc),await o.write(i)}({loc:t.file,...t.fileHead?{fileHead:t.fileHead}:{}});let o=`chmod +x ${t.file}`;return c(`[info] run: ${o}`),e=await i(o,n),t.updateByGit&&(o=`git update-index --chmod=+x ${t.file}`,c(`[info] run: ${o}`),e=await i(o,n)),e};let u,h;c("[info] gen task handle"),u=m.map((t=>p({...r,file:t}))),await o(u,3),r.verbose||(h=await i(`ls ${d} -l`,n),f(h))}export{r as default};
