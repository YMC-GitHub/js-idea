/**
  * addPkgDep v1.0.0
  * (c) 2018-2022 ymc
  * @license MIT
  */
import t from"@ymc/get-file-list";import o from"@ymc/get-node-builtin-modules";import n from"@ymc/dep-parse";import{writeTpl as i}from"@ymc/render-tpl";import{exec as e,execOpts as r}from"@ymc/run-bash";import{camelize as c}from"@ymc/extend-string";import"@ymc/json-stream-io";const{log:m}=console;async function s(s={}){const l={pkgLoc:"./pacakges/noop",pnpmCmd:"pnpm add --filter",pkgSrcLoc:"src",...s},{pkgLoc:p,pkgSrcLoc:a}=l,f=function(t,o="/"){const n=t.split(/\/?\\|\//);return n.slice(0,n.length-1).join(o)}(p);const d=function(t,o={}){let n=function(t){const o=t.split(/\/?\\|\//);return o[o.length-1]}(t);const i={trim:!0,...o};return i.trim&&(n=n.trim()),i.camelize&&(n=c(n)),n}(p);m("[info] get file list at loc"),m(`[info] loc:${p}/${a} `);const u=t(`${p}/${a}`);m("[info] get nodejs built in module");const g=o();m("[info] get dep list of out-lib at loc");const y=u.map((async t=>{const o=new n;return o.option.nodedeps=g,o.option.ignoreComment=!0,await o.parse(t),o.outlibDeps}));let b,$=await Promise.all(y);$=[...new Set($.flat(1))],m($),$&&$.length>0&&(b=i(`${l.pnpmCmd} {libdir}/{libname} ${$.join(" ")}`,{libdir:f,libname:d}),m(`[info] cmd:${b}`),await async function(t,o){const{stdout:n}=await e(t,o);return n}(b,r))}export{s as default};
