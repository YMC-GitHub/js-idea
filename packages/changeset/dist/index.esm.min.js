/**
  * changeset v1.0.0
  * (c) 2018-2022 ymc
  * @license MIT
  */
import{createReadStream as t,createWriteStream as n}from"node:fs";import{readStream as i,writeStream as e}from"@ymc/stream-io";function o(t={}){const{scope:n,lib:i,version:e,msg:o}={lib:"noop",version:"patch",msg:"change all thing",...t};let r=`\n---\n"${n?`@${n}/${i}`:i}": ${e}\n---\n\n${o}\n`;return r=r.trim(),r}function r(t){const n=t.split(/\r?\n/);const i=function(t,n="---"){let i=0,e=0;for(let o=0;o<t.length;o+=1){if(t[o]===n&&(i+=1),2===i){e=o;break}}return e}(n);return{front:n.slice(0,i+1).join("\n"),body:n.slice(i+1).join("\n")}}const a=new class{constructor(t){this.init(t)}async read(n=""){const{file:e}=this;let o,r;o=t(e.name);try{r=await i(o)}catch(t){r=n}return e.data=r,r}async write(t){const{file:i,option:o}=this;let r;r=n(i.name);let a=t;"string"==typeof a?i.data=a:a=i.data,await e({stream:r,data:a})}init(t="CHANGELO.md"){this.file={name:t,data:""},this.option={}}getLibVersionType(t){const{file:n,option:i}=this;return function(t,n){let i,e,o;return i="",o=new RegExp(`\\".*${n}\\": .*`,"ig"),e=t.match(o),e&&(i=e[0].split(":")[1].trim()),i}(n.data,t)}parse(){const{file:t,option:n}=this;return r(t.data)}make(t){const{file:n}=this,i=o(t);return n.data=i,i}};export{a as changeset,o as makeChangeset,r as parseChangeset};
