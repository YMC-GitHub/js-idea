/**
  * changlogStyle v1.0.0
  * (c) 2018-2022 ymc
  * @license MIT
  */
import{writeTpl as e}from"@ymc/render-tpl";function t(e={}){return e=>{const{data:t,option:n}=e,s=t.map(((t,n)=>e.writeTpl("- {commit} {subject}",t))).join("\n");let i="";const r=t;return r.length>0&&(i=e.writeTpl('<a name="{version}"></a>\n# {version}({date})\n### {libname}\n{changes}',{date:r[0].date,changes:s}),e.result=i),i}}function n(e={}){return e=>{const{data:t,option:n}=e;let s;s=t.map((t=>{const n={...t};let{issue:s}=n;return s&&s.length>0?(s=s.filter((e=>e)),n.issue=s.map((t=>e.writeTpl("[#{issue}]({repo}/pull/{issue})",{issue:t.trim().replace(/^#/,"")}))).join(",")):n.issue="",n})),s=s.map(((t,n)=>{const s={...t},{issue:i}=s;return i.length>0?s.subject=e.writeTpl("{subject}({issue})",s):s.subject=e.writeTpl("{subject}",s),s})),s=s.map(((t,n)=>{const s={...t};return s.commit=e.writeTpl("[{commit}]({repo}/commit/{hash})",{...s}),s}));const i=s.map((t=>e.writeTpl("{commit}|{type}|{subject}",t))).join("\n"),r=function(e,t="l"){let n="";const s=e,i=s.split("|").map((()=>{let e="";switch(t){case"m":case"center":e=":----:";break;case"r":case"right":e="----:";break;default:e=":----"}return e})).join("|");return n=`${s}\n${i}`,n}("commit|type|desciption","l"),a=`${r}\n${i}\n\n`;let c="";return s.length>0&&(c=e.writeTpl('<a name="{version}"></a>\n# {version}({date})\n### {libname}\n{changes}',{date:s[0].date,changes:a}),e.result=c),c}}class s{constructor(){this.init()}init(){return this.option={},this.data=[],this.result="",this.plugin=[],this}writeTpl(t,n){return e(t,n)}render(){const e=this,{option:t}=this;switch(t.style.toLowerCase()){case"list":return(e=>{const{data:t,option:n}=e,s=t.map(((t,n)=>e.writeTpl("- {commit} {subject}",t))).join("\n");let i="";const r=t;return r.length>0&&(i=e.writeTpl('<a name="{version}"></a>\n# {version}({date})\n### {libname}\n{changes}',{date:r[0].date,changes:s}),e.result=i),i})(e);case"table":return(e=>{const{data:t,option:n}=e;let s;s=t.map((t=>{const n={...t};let{issue:s}=n;return s&&s.length>0?(s=s.filter((e=>e)),n.issue=s.map((t=>e.writeTpl("[#{issue}]({repo}/pull/{issue})",{issue:t.trim().replace(/^#/,"")}))).join(",")):n.issue="",n})),s=s.map(((t,n)=>{const s={...t},{issue:i}=s;return i.length>0?s.subject=e.writeTpl("{subject}({issue})",s):s.subject=e.writeTpl("{subject}",s),s})),s=s.map(((t,n)=>{const s={...t};return s.commit=e.writeTpl("[{commit}]({repo}/commit/{hash})",{...s}),s}));const i=s.map((t=>e.writeTpl("{commit}|{type}|{subject}",t))).join("\n"),r=function(e,t="l"){let n="";const s=e,i=s.split("|").map((()=>{let e="";switch(t){case"m":case"center":e=":----:";break;case"r":case"right":e="----:";break;default:e=":----"}return e})).join("|");return n=`${s}\n${i}`,n}("commit|type|desciption","l"),a=`${r}\n${i}\n\n`;let c="";return s.length>0&&(c=e.writeTpl('<a name="{version}"></a>\n# {version}({date})\n### {libname}\n{changes}',{date:s[0].date,changes:a}),e.result=c),c})(e)}const{plugin:n}=this;for(let t=0;t<n.length;t+=1){(0,n[t])(e)}return this.result}}const i=new s;i.plugin=[e=>{const{data:t,option:n}=e;let s;s=t.map((t=>{const n={...t};let{issue:s}=n;return s&&s.length>0?(s=s.filter((e=>e)),n.issue=s.map((t=>e.writeTpl("[#{issue}]({repo}/pull/{issue})",{issue:t.trim().replace(/^#/,"")}))).join(",")):n.issue="",n})),s=s.map(((t,n)=>{const s={...t},{issue:i}=s;return i.length>0?s.subject=e.writeTpl("{subject}({issue})",s):s.subject=e.writeTpl("{subject}",s),s})),s=s.map(((t,n)=>{const s={...t};return s.commit=e.writeTpl("[{commit}]({repo}/commit/{hash})",{...s}),s}));const i=s.map((t=>e.writeTpl("{commit}|{type}|{subject}",t))).join("\n"),r=function(e,t="l"){let n="";const s=e,i=s.split("|").map((()=>{let e="";switch(t){case"m":case"center":e=":----:";break;case"r":case"right":e="----:";break;default:e=":----"}return e})).join("|");return n=`${s}\n${i}`,n}("commit|type|desciption","l"),a=`${r}\n${i}\n\n`;let c="";return s.length>0&&(c=e.writeTpl('<a name="{version}"></a>\n# {version}({date})\n### {libname}\n{changes}',{date:s[0].date,changes:a}),e.result=c),c}];export{s as ChangelogStyle,i as changelogstyle,t as pluginMdList,n as pluginMdtable};
