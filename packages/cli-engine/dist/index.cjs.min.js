/**
  * cliEngine v1.0.0
  * (c) 2018-2022 ymc
  * @license MIT
  */
"use strict";function t(t){
/**
  * extendString v1.0.0
  * (c) 2018-2022 ymc
  * @license MIT
  */
return function(t){return t.replace(/(?:^\w|[A-Z_-]|\b\w)/g,((t,e)=>{let n="";return n=t.replace(/[-_]+/g," "),n=0!==e?n.replace(/[A-Z]/," $&"):n,0===e?n.toUpperCase():n.toLowerCase()})).replace(/\s+/g," ")}(t).replace(/(?:^\w|[A-Z]|\b\w)/g,((t,e)=>0===e?t.toLowerCase():t.toUpperCase())).replace(/\s+/g,"")}function e(t,n=0,s=" "){return t.length>=n?String(t):e(t+s,n,s)}
/**
  * cliParam v1.0.0
  * (c) 2018-2022 ymc
  * @license MIT
  */function n(e,n={}){let s={};const i=Object.keys(e).map((t=>e[t])),o={slim:!0,modeStyle:"cli",...n};"string"===o.mode&&(o.slim=!0);for(let e=0;e<i.length;e+=1){const n=i[e],{name:r,type:a,value:l,desc:u}=n,[c,p]=r.split(/,/).map((t=>t.trim().replace(/^-*/gi,""))),h=c.length>1?c:p;if(h){if(o.noAutoCamelize||(s[t(h)]=l),o.slim)continue;s[h]=l}s[c]=l}return"string"===o.mode&&(s=function(t,e){const n={modeStyle:"cli",...e};let s="";return"string"===n.mode&&"cli"===n.modeStyle&&(s=Object.keys(t).map((e=>e.length>1?`--${e}=${t[e]}`:`-${e}=${t[e]}`)).join(" ")),"string"===n.mode&&"httpquery"===n.modeStyle&&(s=Object.keys(t).map((e=>`${e}=${t[e]}`)).join("&")),"string"===n.mode&&"swithoption"===n.modeStyle&&(s=Object.keys(t).map((e=>`${e}=${t[e]}`)).join(";")),s}(s,o)),s}function s(e={},n={}){const s={slim:!0,...n};return s.noAutoCamelize||Object.keys(e).forEach((n=>{const i=t(n);i!==n&&(e[i]=e[n],s.slim&&delete e[n])})),e}Object.defineProperty(exports,"__esModule",{value:!0});
/**
  * cliOption v1.0.0
  * (c) 2018-2022 ymc
  * @license MIT
  */
const{log:i}=console;function o(t,e,n={}){let s;return s=t[e]?t[e]:n,s}function r(t,e="",n=""){let s=t;return e&&n?(s=o(s,e),s=o(s,n)):e?s=o(s,e):n&&(s=o(s,n)),s}function a(t,e="",n=2){let s;return s=Array.isArray(t)?t:[t],s.join("\n").replace(/^/gim,Array(n).fill(e).join(""))}function l(t){let n=Array.isArray(t)?t:[t];const s=Math.max(...n.map((t=>t.split(" ")[0].length)));return n=n.map((t=>{const n=t.split(" ");let i=n[0];const o=n.slice(1);return i=e(i,s+6," "),`${i}${o.join(" ")}`})),n}function u(t,e=""){const n=new RegExp(` *${t}:.*`,"ig"),s=e.match(n);return s?s[0].replace(new RegExp(` *${t}:`,"i"),""):""}class c{constructor(){this.init()}init(){return this.optionMap={},this.opt="",this.relationMap={},this.cmd=new Set,this.ns=new Set,this.paramMap={},this}addOpt(t="",e="",n=""){const{optionMap:s,relationMap:i}=this,o=function(t="",e="l"){let n="";n=t.split(" ")[0].split(",").map((t=>t.replace(/^-*/gi,""))),n="s"===e.toLowerCase()?n[0]:n[1]?n[1]:n[0];return n}(t);let a=s;return a[o]=t,a=r(i,e,n),a[o]=!0,this.cmd.add(n),this.ns.add(e),this}getOpt(t,e="",n=""){const{optionMap:s,relationMap:i}=this,o=s;return this.opt=o[t],this}logOpt(){return i(this.opt),this}bindOpt(t="",e=""){return this.addOpt(this.opt,t,e),this}usage(t="",e=""){const{optionMap:n,relationMap:s}=this;let i,o,u;i=r(s,t,e),o=Object.keys(i),o=o.filter((t=>!this.cmd.has(t))),o=o.filter((t=>!this.ns.has(t))),i=n,u=Object.keys(i).filter((t=>o.includes(t))).map((t=>i[t])),u=l(u),u=a(u," ",2),u=`option:\n${u}`;let c=[...this.ns].filter((t=>t.trim())).join("|");c=c?`subns:${c}`:"";let p=[...this.cmd].filter((t=>t.trim())).join("|");p=p?`subcmd:${p}`:"";let h="usage:{ns} [option]";return c&&(h=h.replace(/\[option\]$/,"[subns] [option]")),p&&(h=h.replace(/\[option\]$/,"[subcmd] [option]")),p&&(u=`${p}\n${u}`),c&&(u=`${c}\n${u}`),u=a(u," ",2),h&&(u=`${h}\n${u}`),u}param(t,e="",n=""){const{paramMap:s}=this;return t.forEach((t=>{s[t.name]||(s[t.name]=t);const{name:i,type:o,value:r,desc:a}=t;this.addOpt(`${i} ${a}`,e,n)})),this}getBuiltinConfig(t={}){const{paramMap:e}=this;return n(e,t)}getCliFlags(t,e={}){let n;const{entrys:i}=e;return n=t.flags||i&&i.notOnlyFlags?t.flags:t,s(n,e)}getCurrentFlags(t,e={}){let n;return n={...this.getBuiltinFlags(),...this.getCliFlags(t,e)},n=s(n,e),n}camelizeFlags(t={},e={}){return s(t,e)}updateEntryOption(t,e="npm-bin",n="1.0.0"){const{usagemsg:s}=this;return function(t={},e="npm-bin",n="1.0.0",s=""){let i={};return i={...t,version:n,ns:e},s&&(i={autoSubCmd:u("subcmd",s),autoSubNs:u("subns",s)}),i}(t,e,n,s)}}
/**
  * nanoParse v0.0.1
  * (c) 2018-2022 ymc
  * @license MIT
  */
function p(t){const e=Array.isArray(t)?t:t.split(/ +/);let n=[],s=e;const i=[];e.includes("--")&&(n=e.slice(e.indexOf("--")+1),s=e.slice(0,e.indexOf("--")));const o=[];for(let t=0;t<s.length;t++){const e=s[t-1],n=s[t],r=s[t+1],a=r&&!/^--.+/.test(r)&&!/^-.+/.test(r),l=t=>{o.push([t,!a||r])};if(/^--.+=/.test(n)||/^-.=/.test(n))o.push(n.split("="));else if(/^-[^-].*/.test(n)){let t=n;if(t.includes("=")){const e=t.indexOf("=");o.push([t.slice(e-1,e),t.slice(e+1,e+2)]),t=t.slice(0,e-1)+t.slice(e+2)}const e=t.slice(1).split("").slice(0,-1);for(const t of e)o.push([t,!0]);l(t[t.length-1])}else if(/^--.+/.test(n)||/^-.+/.test(n))l(n);else{let t=o.find((t=>t[0]===e));if(!t&&/^-./.test(e)){const n=e[e.length-1];t=o.find((t=>t[0]===n))}t||i.push(n)}}const r={};for(const t of o){let e=t[0].replace(/^-{1,2}/g,""),n=t[1];e.startsWith("no-")&&[void 0,!0].includes(n)&&(e=e.slice(3),n=!1),r[e]=h(n)}return{flags:r,_:i.map((t=>h(t))),extras:n.map((t=>h(t)))}}function h(t){return!!["true",!0].includes(t)||!["false",!1].includes(t)&&(Number(t)?Number(t):t)}
/**
  * cliRunner v1.0.0
  * (c) 2018-2022 ymc
  * @license MIT
  */new c;const{log:g}=console;class d{constructor(){this.option={helpmsg:"usage:ns option",argvIndexS:2,enbaleSubCmd:!1,subcmd:"",allowAutoSubCmd:!0,autoSubCmd:"",version:"1.0.0",ns:"ycs",enbaleSubNs:!1,subns:"",allowAutoSubNs:!0,autoSubNs:""}}ns(t="ycs"){return this.option.ns=t,this}version(t="1.0.0"){return this.option.version=t,this}entry(t={},e="version,ns,autoSubCmd,autoSubNs"){const n=this;return t.option&&(n.option={...n.option,...t.option}),e.split(",").forEach((e=>{t[e]&&(n.option[e]=t[e])})),n.option.entrys=t,this}autosubcmd(t=""){return this.option.autoSubCmd=t,this}autosubns(t=""){return this.option.autoSubNs=t,this}nanoparse(t=(()=>{})){return this.option.nanoparse=t,this}checkSubnsEnable(){}checkSubCmdEnable(){}checkExpectArgvStart(){}run(t){let{entrys:e,helpmsg:n,argvIndexS:s,enbaleSubCmd:i,subcmd:o,allowAutoSubCmd:r,autoSubCmd:a,version:l,ns:u,enbaleSubNs:c,subns:p,allowAutoSubNs:h,autoSubNs:d,nanoparse:m}=this.option;!c&&h&&d&&(d=Array.isArray(d)?d:d.split("|"),c=d.includes(t[s])),c&&(p=t[s],s+=1,n=n.replace(/option$/,"subns option")),!i&&r&&a&&(a=Array.isArray(a)?a:a.split("|"),i=a.includes(t[s])),i&&(o=t[s],s+=1,n=n.replace(/option$/,"subcmd option"));let b=e;if(n=e.usage,c&&p){if(!b[p])return g(`${n}`),void g(`todo:subns:${p}`);n=b[p].usage?b[p].usage:n,l=b[p].version?b[p].version:l,b=b[p]?b[p]:()=>{}}if(i&&o){if(!b[o])return g(`${n}`),void g(`todo:subcmd:${o}`);n=b[o].usage?b[o].usage:n,l=b[o].version?b[o].version:l,b=b[o]?b[o]:()=>{}}let f=t.length<=s;if(e.enableZeroOption&&(f=t.length<s),b.enableZeroOption&&(f=t.length<s),f)return g(`${n}`),void g("error:invalid argv length");const y=(m||(t=>t))(t.slice(s)),$=y.flags;if(($.debugArgs||$.da)&&g(y),$.version||$.v)g(`${u} version:${l}`);else{if(!$.help&&!$.h)return e.notOnlyFlags||b.notOnlyFlags?b(y):b($);g(`${n}`)}}}new d;class m{constructor(){this.init()}init(){return this.too=new c,this.data={},this.ycs=new d,this.ycs.nanoparse(p),this}param(t){const{too:e}=this;return e.param(t),this}usage(...t){const{too:e,data:n}=this;return n.usage=e.usage(...t),this}option(t,e,n){const{too:s,data:i}=this;return i.option=s.updateEntryOption(t,e,n),this}entry(t,e={}){const{data:n,ycs:s}=this;return n.entry=
/**
  * cliEntry v1.0.0
  * (c) 2018-2022 ymc
  * @license MIT
  */
function(t=(()=>{}),e={}){const n={enableZeroOption:!0,notOnlyFlags:!0,...e};return t.usage=n.usage,t.option=n.option,t.enableZeroOption=n.enableZeroOption,t.notOnlyFlags=n.notOnlyFlags,t}(t,{...{usage:n.usage,option:n.option,...e}}),this}run(){const{data:t,ycs:e}=this;e.entry(t.entry),e.run(process.argv)}new(){return new m}camelizeFlags(t={},e={}){return s(t,e)}getBuiltinFlags(...t){const{too:e}=this;return e.getBuiltinConfig(...t)}getCurrentFlags(...t){let e;return e={...this.getBuiltinFlags(),...this.getCliFlags(t[0],t[1])},e=this.camelizeFlags(e,t[1]),e}getCliFlags(t,e={}){const{data:n}=this;return function(t,e={}){let n;const{entrys:i}=e;return n=t.flags||i&&i.notOnlyFlags?t.flags:t,s(n,e)}(t,{...e,entrys:n.entry})}}const b=new m;exports.ycs=b;
