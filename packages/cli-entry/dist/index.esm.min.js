/**
  * cliEntry v1.0.0
  * (c) 2018-2022 ymc
  * @license MIT
  */
function n(n=(()=>{}),t={}){const e={enableZeroOption:!0,notOnlyFlags:!0,...t};return n.usage=e.usage,n.option=e.option,n.enableZeroOption=e.enableZeroOption,n.notOnlyFlags=e.notOnlyFlags,n}function t(n,t){n.entry(t).run(process.argv)}class e{entrys(n){return n?(this.context=n,this):this.context}bind(n="",t=(()=>{}),e=""){const o=this.entrys();n.split("|").forEach((n=>{let s;if("call"===e.toLowerCase())s=t(n);o[n]=s}))}}function o(n){const{subcmd:t,defFun:o,bindType:s}=n,r=new e;r.entrys(n.entrys),r.bind(t,o,s)}export{o as bindCmdToEntry,n as defEntry,t as runEntry};
