/**
  * cliOption v1.0.0
  * (c) 2018-2022 ymc
  * @license MIT
  */
import{getValFromParam as t,camelizeFlags as n}from"@ymc/cli-param";import{padEndString as i}from"@ymc/extend-string";const{log:e}=console;function s(t,n,i={}){let e;return e=t[n]?t[n]:i,e}function r(t,n="",i=""){let e=t;return n&&i?(e=s(e,n),e=s(e,i)):n?e=s(e,n):i&&(e=s(e,i)),e}function o(t="",n="l"){let i="";if(i=t.split(" ")[0].split(",").map((t=>t.replace(/^-*/gi,""))),"s"===n.toLowerCase())i=i[0];else i=i[1]?i[1]:i[0];return i}function a(t,n="",i=2){let e;return e=Array.isArray(t)?t:[t],e.join("\n").replace(/^/gim,Array(i).fill(n).join(""))}function l(t){let n=Array.isArray(t)?t:[t];const e=Math.max(...n.map((t=>t.split(" ")[0].length)));return n=n.map((t=>{const n=t.split(" ");let s=n[0];const r=n.slice(1);return s=i(s,e+6," "),`${s}${r.join(" ")}`})),n}function p(t,n=""){const i=new RegExp(` *${t}:.*`,"ig"),e=n.match(i);return e?e[0].replace(new RegExp(` *${t}:`,"i"),""):""}function c(t={},n="npm-bin",i="1.0.0",e=""){let s={};return s={...t,version:i,ns:n},e&&(s={autoSubCmd:p("subcmd",e),autoSubNs:p("subns",e)}),s}class u{constructor(){this.init()}init(){return this.optionMap={},this.opt="",this.relationMap={},this.cmd=new Set,this.ns=new Set,this.paramMap={},this}addOpt(t="",n="",i=""){const{optionMap:e,relationMap:s}=this,a=o(t);let l=e;return l[a]=t,l=r(s,n,i),l[a]=!0,this.cmd.add(i),this.ns.add(n),this}getOpt(t,n="",i=""){const{optionMap:e,relationMap:s}=this,r=e;return this.opt=r[t],this}logOpt(){return e(this.opt),this}bindOpt(t="",n=""){return this.addOpt(this.opt,t,n),this}usage(t="",n=""){const{optionMap:i,relationMap:e}=this;let s,o,p;s=r(e,t,n),o=Object.keys(s),o=o.filter((t=>!this.cmd.has(t))),o=o.filter((t=>!this.ns.has(t))),s=i,p=Object.keys(s).filter((t=>o.includes(t))).map((t=>s[t])),p=l(p),p=a(p," ",2),p=`option:\n${p}`;let c=[...this.ns].filter((t=>t.trim())).join("|");c=c?`subns:${c}`:"";let u=[...this.cmd].filter((t=>t.trim())).join("|");u=u?`subcmd:${u}`:"";let h="usage:{ns} [option]";return c&&(h=h.replace(/\[option\]$/,"[subns] [option]")),u&&(h=h.replace(/\[option\]$/,"[subcmd] [option]")),u&&(p=`${u}\n${p}`),c&&(p=`${c}\n${p}`),p=a(p," ",2),h&&(p=`${h}\n${p}`),p}param(t,n="",i=""){const{paramMap:e}=this;return t.forEach((t=>{e[t.name]||(e[t.name]=t);const{name:s,type:r,value:o,desc:a}=t;this.addOpt(`${s} ${a}`,n,i)})),this}getBuiltinConfig(n={}){const{paramMap:i}=this;return t(i,n)}getCliFlags(t,i={}){let e;const{entrys:s}=i;return e=t.flags||s&&s.notOnlyFlags?t.flags:t,n(e,i)}getCurrentFlags(t,i={}){let e;return e={...this.getBuiltinFlags(),...this.getCliFlags(t,i)},e=n(e,i),e}camelizeFlags(t={},i={}){return n(t,i)}updateEntryOption(t,n="npm-bin",i="1.0.0"){const{usagemsg:e}=this;return c(t,n,i,e)}}const h=new u;export{u as CliOptionHelp,l as beautyOptionText,h as cliOptionHelp,a as formatOptionText,o as getCliOptionName,p as getTxtFromUsage,c as updateEntryOption};
