/**
  * cliParamPluginJsdoc v1.0.0
  * (c) 2018-2022 ymc
  * @license MIT
  */
import{camelize as t}from"@ymc/extend-string";function e(t){const[e,n]=t.split(/,/).map((t=>t.trim().replace(/^-*/gi,"")));return e.length>1?e:n}function n(n,r,p={}){if(p.long)return function(n,r){let p=[];return p=r.map((n=>{const{name:r,type:p,desc:$,value:o}=n,i=t(e(r));return n.optional?"string"===p&&o?` * @property {${p}} [${i}="${o}"] - ${$}`:"number"===p&&o?` * @property {${p}} [${i}=${o}] - ${$}`:` * @property {${p}} [${i}] - ${$}`:` * @property {${p}} ${i} - ${$}`})),p=p.join("\n"),p=`/**\n * @typedef {object} ${n}\n${p}\n */`,p}(n,r);let $=[];return $=r.map((n=>{const{name:r,type:p}=n;return`${t(e(r))}:${p}`})),$=$.join(","),$=`/** @typedef {${$}} ${n}*/`,$}export{n as default};
