/**
  * cliParam v1.0.0
  * (c) 2018-2022 ymc
  * @license MIT
  */
import{camelize as e}from"@ymc/extend-string";function t(e,t){const n={modeStyle:"cli",...t};let o="";return"string"===n.mode&&"cli"===n.modeStyle&&(o=Object.keys(e).map((t=>t.length>1?`--${t}=${e[t]}`:`-${t}=${e[t]}`)).join(" ")),"string"===n.mode&&"httpquery"===n.modeStyle&&(o=Object.keys(e).map((t=>`${t}=${e[t]}`)).join("&")),"string"===n.mode&&"swithoption"===n.modeStyle&&(o=Object.keys(e).map((t=>`${t}=${e[t]}`)).join(";")),o}function n(n,o={}){let i={};const l=Object.keys(n).map((e=>n[e])),s={slim:!0,modeStyle:"cli",...o};"string"===s.mode&&(s.slim=!0);for(let t=0;t<l.length;t+=1){const n=l[t],{name:o,type:m,value:r,desc:c}=n,[u,y]=o.split(/,/).map((e=>e.trim().replace(/^-*/gi,""))),a=u.length>1?u:y;if(a){if(s.noAutoCamelize||(i[e(a)]=r),s.slim)continue;i[a]=r}i[u]=r}return"string"===s.mode&&(i=t(i,s)),i}function o(t={},n={}){const o={slim:!0,...n};return o.noAutoCamelize||Object.keys(t).forEach((n=>{const i=e(n);i!==n&&(t[i]=t[n],o.slim&&delete t[n])})),t}function i(e,t={}){return n(e,t)}function l(e,t={}){let n;const{entrys:i}=t;return n=e.flags||i&&i.notOnlyFlags?e.flags:e,o(n,t)}export{o as camelizeFlags,i as getBuiltinConfig,l as getCliFlags,n as getValFromParam,t as paramJsonToString};
