/**
  * cliParam v1.0.0
  * (c) 2018-2022 ymc
  * @license MIT
  */
import{camelize as e}from"@ymc/extend-string";import t from"@ymc/get-obj-only-defined-keys";function n(e,t){const n={modeStyle:"cli",...t};let o="";return"string"===n.mode&&"cli"===n.modeStyle&&(o=Object.keys(e).map((t=>t.length>1?`--${t}=${e[t]}`:`-${t}=${e[t]}`)).join(" ")),"string"===n.mode&&"httpquery"===n.modeStyle&&(o=Object.keys(e).map((t=>`${t}=${e[t]}`)).join("&")),"string"===n.mode&&"swithoption"===n.modeStyle&&(o=Object.keys(e).map((t=>`${t}=${e[t]}`)).join(";")),o}function o(t,o={}){let i={};const l=Object.keys(t).map((e=>t[e])),m={slim:!0,modeStyle:"cli",...o};"string"===m.mode&&(m.slim=!0);for(let t=0;t<l.length;t+=1){const n=l[t],{name:o,type:s,value:r,desc:c}=n,[y,u]=o.split(/,/).map((e=>e.trim().replace(/^-*/gi,""))),d=y.length>1?y:u;if(d){if(m.noAutoCamelize||(i[e(d)]=r),m.slim)continue;i[d]=r}i[y]=r}return"string"===m.mode&&(i=n(i,m)),i}function i(t={},n={}){const o={slim:!0,...n};return o.noAutoCamelize||Object.keys(t).forEach((n=>{const i=e(n);i!==n&&(t[i]=t[n],o.slim&&delete t[n])})),t}function l(e,t={}){return o(e,t)}function m(e,t={}){let n;const{entrys:o}=t;return n=e.flags||o&&o.notOnlyFlags?e.flags:e,i(n,t)}function s(e,n={}){return t({...l(e),...m(n)})}export{i as camelizeFlags,l as getBuiltinConfig,m as getCliFlags,s as getMainOptions,o as getValFromParam,n as paramJsonToString};
