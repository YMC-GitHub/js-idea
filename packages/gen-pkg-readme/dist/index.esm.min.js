/**
  * genPkgReadme v1.0.0
  * (c) 2018-2022 ymc
  * @license MIT
  */
import{writeTpl as e}from"@ymc/render-tpl";import{readFileSync as n,writeFileSync as t}from"node:fs";const o=/({|})|(\[|\])|(\(|\))/gi,r=(e,n=o)=>e.replace(n,"\\$&"),a=(e,n={})=>((e,n={})=>{const t={regexpOption:"ig",...n};let{openLabel:o,closeLabel:a,regexpOption:i}=t;return t.excapeSpecialChars&&(o=r(o,t.specialCharsReg),a=r(a,t.specialCharsReg)),new RegExp(`${o}${e}${a}`,i)})(e,{excapeSpecialChars:!0,specialCharsReg:o,...n});const{log:i}=console;function l(e,t=""){let o;try{o=n(e),o=o.toString()}catch(e){o=t}return o}function c(e,t={}){let o;try{o=n(e),o=JSON.parse(o)}catch(e){o=t}return o}function s(e,n="{{",t="}}"){return a(e,{openLabel:n,closeLabel:t})}function p(e,n={}){return(t="",o="")=>{const r={tpl:"",joinMode:"foot",..."string"==typeof n?{tpl:n}:n};let a=t;const i=s(e);return i.test(a)||(a=r.tpl),a=a.replace(i,o),a}}function f(n){i(`[info] wkd is: ${n}`),i("[task] gen pkg readme"),i("[info] load pkg-json data");const o=c(`${n}/package.json`);let r,a,f,m;i("[info] load readme tpl"),r=((e="readme",n=".")=>`${n}/${e}.tpl.md`)("readme",n),i(`[info] loc: ${r}`),a=l(r),i("[info] load lib-size data"),r=((e="readme",n=".")=>`${n}/${e}.tmp.md`)("lib-size",n),i(`[info] loc: ${r}`),f=l(r),m=function(e="",n=""){let t=e;const o=s("LIB_SIZE_INFO");return o.test(t)||(t=`\n${t}\n## Lib size  \n{{LIB_SIZE_INFO}}\n`.trim()),t=t.replace(o,n),t}(a,f),m=function(e,n){return p("LIB_NAME",` # Pkg {{LIB_NAME}}\n${e}`)(e,n)}(m,o.name),m=((e,n)=>{let t,o,r,a=e;if(t="description",t in n&&n[t]&&(o=n[t],r="\n## Desc\n{{PKG_DESC}}\n".trim(),a=p("PKG_DESC",r)(a,o)),t="license",t in n&&n[t]&&(o=n[t],r="\n## License\n{{LICENSE}}\n".trim(),a=p("LICENSE",r)(a,o)),t="author",t in n&&n[t]){o=n[t];const{name:e}=o,{email:i}=o;o=i?`${e} <${i}>`:`${e}`,r="\n## Author\n{{AUTHOR_LIST}}\n".trim(),a=p("AUTHOR_LIST",r)(a,o)}return a})(m,o),i("[info] load pkgs state data");let d=c("pkgs-info.json");d=d.filter((e=>e.name===o.name)),[d]=d,i("[info] load pkg-state tpl"),r="pkgs-state.tpl.tmp.md",i(`[info] loc: ${r}`),a=l(r),a=e(a,d),m=`${a}\n${m}`,function(e,n=""){try{t(e,n)}catch(e){}}(`${n}/readme.md`,m)}export{f as default};
