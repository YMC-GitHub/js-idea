/**
  * genPkgReadme v1.0.0
  * (c) 2018-2022 ymc
  * @license MIT
  */
!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?module.exports=n(require("node:fs")):"function"==typeof define&&define.amd?define(["node:fs"],n):(e="undefined"!=typeof globalThis?globalThis:e||self)["gen-pkg-readme"]=n(e.node_fs)}(this,(function(e){"use strict";
/**
    * renderTpl v1.0.0
    * (c) 2018-2022 ymc
    * @license MIT
    */function n(e,n){let t=e;return Object.keys(n).forEach((e=>{const o=n[e];t=t.replace(new RegExp(`{${e}}`,"ig"),o)})),t}const t=/({|})|(\[|\])|(\(|\))/gi,o=(e,n=t)=>e.replace(n,"\\$&"),i=(e,n={})=>((e,n={})=>{const t={regexpOption:"ig",...n};let{openLabel:i,closeLabel:r,regexpOption:a}=t;return t.excapeSpecialChars&&(i=o(i,t.specialCharsReg),r=o(r,t.specialCharsReg)),new RegExp(`${i}${e}${r}`,a)})(e,{excapeSpecialChars:!0,specialCharsReg:t,...n});const{log:r}=console;function a(n,t=""){let o;try{o=e.readFileSync(n),o=o.toString()}catch(e){o=t}return o}function c(n,t={}){let o;try{o=e.readFileSync(n),o=JSON.parse(o)}catch(e){o=t}return o}function l(e,n="{{",t="}}"){return i(e,{openLabel:n,closeLabel:t})}function s(e,n={}){return(t="",o="")=>{const i={tpl:"",joinMode:"foot",..."string"==typeof n?{tpl:n}:n};let r=t;const a=l(e);return a.test(r)||(r=i.tpl),r=r.replace(a,o),r}}return function(t){r(`[info] wkd is: ${t}`),r("[task] gen pkg readme"),r("[info] load pkg-json data");const o=c(`${t}/package.json`);let i,p,f,d;r("[info] load readme tpl"),i=((e="readme",n=".")=>`${n}/${e}.tpl.md`)("readme",t),r(`[info] loc: ${i}`),p=a(i),r("[info] load lib-size data"),i=((e="readme",n=".")=>`${n}/${e}.tmp.md`)("lib-size",t),r(`[info] loc: ${i}`),f=a(i),d=function(e="",n=""){let t=e;const o=l("LIB_SIZE_INFO");return o.test(t)||(t=`\n${t}\n## Lib size  \n{{LIB_SIZE_INFO}}\n`.trim()),t=t.replace(o,n),t}(p,f),d=function(e,n){return s("LIB_NAME",` # Pkg {{LIB_NAME}}\n${e}`)(e,n)}(d,o.name),d=((e,n)=>{let t,o,i,r=e;if(t="description",t in n&&n[t]&&(o=n[t],i="\n## Desc\n{{PKG_DESC}}\n".trim(),r=s("PKG_DESC",i)(r,o)),t="license",t in n&&n[t]&&(o=n[t],i="\n## License\n{{LICENSE}}\n".trim(),r=s("LICENSE",i)(r,o)),t="author",t in n&&n[t]){o=n[t];const{name:e}=o,{email:a}=o;o=a?`${e} <${a}>`:`${e}`,i="\n## Author\n{{AUTHOR_LIST}}\n".trim(),r=s("AUTHOR_LIST",i)(r,o)}return r})(d,o),r("[info] load pkgs state data");let u=c("pkgs-info.json");u=u.filter((e=>e.name===o.name)),[u]=u,r("[info] load pkg-state tpl"),i="pkgs-state.tpl.tmp.md",r(`[info] loc: ${i}`),p=a(i),p=function(e,t){return t?n(e,t):t=>n(e,t)}(p,u),d=`${p}\n\n${d}`,function(n,t=""){try{e.writeFileSync(n,t)}catch(e){}}(`${t}/readme.md`,d)}}));
