/**
  * gitCommitMsgParse v1.0.0
  * (c) 2018-2022 ymc
  * @license MIT
  */
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self)["git-commit-msg-parse"]={})}(this,(function(t){"use strict";function e(t){return void 0!==t}function n(t,e){const n=/\(.*\):?/gi;if(t.match(n))return t.split(":")[0].replace(n,"");let i=t.split(" ")[0].trim().replace(/\(.*\):?/gi,"").trim();return function(t,e="feat|fix|docs|style|refactor|preform|test|tool|chore|revert"){return n=t,e.split("|").some((t=>t===n));var n}(i,e)||(i=""),i}function i(t=""){const e=t.match(/\(.*\)/gi);let n="";return e&&([n]=e),n=n.replace(/(^\(|\)$)/gi,""),n}function o(t=""){let n;const i={body:t,foot:""};let o,r,c,s;n=t.replace(/\\\\n/gi,"\n"),o=function(t){return t.trim().split(/\r?\n/)}(n);for(let t=0;t<o.length;t+=1){const n=o[t];if(!e(r)&&n.match(/^BREAKING CHANGE/i)&&(r=t),!e(c)&&n.match(/^CLOSING ISSUE/i)&&(c=t),!e(s)&&n.match(/^generated by/i)&&(s=t),e(c)&&e(r)&&e(s))break}let l=-1;return e(c)||(c=-1),e(r)||(r=-1),e(s)||(s=-1),l=Math.max(c,r,s),l>=0&&l<=o.length&&(i.foot=o.slice(l).join("\n").trim(),i.body=l>0?o.slice(0,l).join("\n").trim():""),i}t.getIssueInFoot=function(t,e=/#\d+/gi){const n=t.match(e);let i=[];return n&&(i=n),i},t.getScopeInSubject=i,t.getTypeInSubject=n,t.parse=function(t,e,r){let c,s,l,f;if(e)[l,f]=[t,e];else{const e=t.trim().split(/\r?\n/).map((t=>t.trim().split("\\n"))).flat(1).map((t=>t.trim()));[l]=e,f=e.slice(1).join("\n"),f||(f=l)}const p=o(f);return c=n(l,r),s=i(l),l=l.replace(c,"").replace(/\(.*\):?/i,"").trim(),{type:c,scope:s,subject:l,...p}},t.parseMsgBody=o,Object.defineProperty(t,"__esModule",{value:!0})}));
