/**
  * gitCommitTypeLang v1.0.0
  * (c) 2018-2022 ymc
  * @license MIT
  */
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self)["git-commit-type-lang"]={})}(this,(function(t){"use strict";function e(t,e="|"){let n="";return n=t.split(e).map((t=>function(t,e=/\(.*\)/gi){let n=t;const i=n.match(e);return i&&i[0]&&(n=n.replace(i[0],"")),n}(t))).join(e),n}t.linkMap=function(t,n,i,o="|"){let r,s;if(!0===i)r=e(t).split(o),s=e(n).split(o);else r=t,s=n;return r.map(((t,e)=>[t,s[e]]))},t.parseMap=function(t,e="|"){const n=function(t){return t.split(/\r?\n/)}(t.trim()).filter((t=>!/^\/\//.test(t))),i=[],o=[];for(let t=0;t<n.length;t+=2){const r=n[t],s=n[t+1];i.push(...r.split(e)),o.push(...s.split(e))}return[i,o]},t.toArray=function(t,n="|"){return e(t,n).split(n).map((t=>[t,t]))},t.toJson=function(t,n="|"){const i={};return e(t,n).split(n).forEach((t=>{i[t]=t})),i},t.validType=e,Object.defineProperty(t,"__esModule",{value:!0})}));
