#!/usr/bin/env node
/**
  * jcm v0.0.1
  * (c) 2018-2022 ymc
  * @license MIT
  */
#!/usr/bin/env node
/**
  * jcm v0.0.1
  * (c) 2018-2022 ymc
  * @license MIT
  */
const n=(n,e="")=>{const s=new RegExp(` *${n}:.*`,"ig"),t=e.match(s);return t?t[0].replace(new RegExp(` *${n}:`,"i"),""):""},{log:e}=console,s=(n={})=>{e("[info] run cmd with: ns"),e("hello ns"),e("[info] log cli option:"),e(n)},t=new class{constructor(){}entrys(n){return n?(this.context=n,this):this.context}bind(n="",e=(()=>{}),s=""){const t=this.entrys();n.split("|").forEach((n=>{let o;if("call"===s.toLowerCase())o=e(n);t[n]=o}))}};t.entrys(s).bind("add|del|put",((n="add")=>(s={})=>{e(`[info] run cmd with: ns ${n}`),e(`hello ${n}`),e("[info] log cli option:"),e(s)}),"call");const o=((n="ns")=>`cnf gen for ymc repo\n  mgnt cnf file\n  usage:ns [subcmd] [option]\n    ${n} -h\n    ${n} -v\n\n  subcmd:add|del|get\n    add - add des file\n    del - del des file\n    get - get des file\n  option:\n    -n,--name cnf file name (default:.ymcrc.json )\n    -w,--wkd use working dir\n    -u,--usd use user dir\n    -c,--crd use current dir\n    -h,--help get help\n    -v,--version get version\n`)("jcm"),i=((e="npm-bin",s="1.0.0",t="")=>{let o={};return o={...o,version:s,ns:e,autoSubCmd:n("subcmd",t),autoSubNs:n("subns",t)},o})("jcm","1.0.0",o);s.usage=o,s.option=i,s.enableZeroOption=!0,s.notOnlyFlags=!0;const l=n=>!!["true",!0].includes(n)||!["false",!1].includes(n)&&(Number(n)?Number(n):n),{log:r}=console;const u=new class{constructor(){this.option={helpmsg:"usage:ns option",argvIndexS:2,enbaleSubCmd:!1,subcmd:"",allowAutoSubCmd:!0,autoSubCmd:"",version:"1.0.0",ns:"ycs",enbaleSubNs:!1,subns:"",allowAutoSubNs:!0,autoSubNs:""}}ns(n="ns"){return this.option.ns=n,this}version(n="1.0.0"){return this.option.version=n,this}entry(n={}){return this.option.entrys=n,this}autosubcmd(n=""){return this.option.autoSubCmd=n,this}autosubns(n=""){return this.option.autoSubNs=n,this}nanoparse(n=(()=>{})){return this.option.nanoparse=n,this}run(n){let{entrys:e,helpmsg:s,argvIndexS:t,enbaleSubCmd:o,subcmd:i,allowAutoSubCmd:u,autoSubCmd:c,version:a,ns:d,enbaleSubNs:p,subns:h,allowAutoSubNs:b,autoSubNs:g}=this.option;!p&&b&&g&&(g=Array.isArray(g)?g:g.split("|"),p=g.includes(n[t])),p&&(h=n[t],t++,s=s.replace(/option$/,"subns option")),!o&&u&&c&&(c=Array.isArray(c)?c:c.split("|"),o=c.includes(n[t])),o&&(i=n[t],t++,s=s.replace(/option$/,"subcmd option"));let f=e;if(s=e.usage,p&&h){if(!f[h])return r(`${s}`),void r(`todo:subns:${h}`);s=f[h].usage?f[h].usage:s,a=f[h].version?f[h].version:a,f=f[h]?f[h]:()=>{}}if(o&&i){if(!f[i])return r(`${s}`),void r(`todo:subcmd:${i}`);s=f[i].usage?f[i].usage:s,a=f[i].version?f[i].version:a,f=f[i]?f[i]:()=>{}}let m=n.length<=t;if(e.enableZeroOption&&(m=n.length<t),f.enableZeroOption&&(m=n.length<t),m)return r(`${s}`),void r("error:invalid argv length");const v=function(n){let e=[],s=n;const t=[];n.includes("--")&&(e=n.slice(n.indexOf("--")+1),s=n.slice(0,n.indexOf("--")));const o=[];for(let n=0;n<s.length;n++){const e=s[n-1],i=s[n],l=s[n+1],r=l&&!/^--.+/.test(l)&&!/^-.+/.test(l),u=n=>{o.push([n,!r||l])};if(/^--.+=/.test(i)||/^-.=/.test(i))o.push(i.split("="));else if(/^-[^-].*/.test(i)){let n=i;if(n.includes("=")){const e=n.indexOf("=");o.push([n.slice(e-1,e),n.slice(e+1,e+2)]),n=n.slice(0,e-1)+n.slice(e+2)}for(const e of n.slice(1).split("").slice(0,-1))o.push([e,!0]);u(n[n.length-1])}else if(/^--.+/.test(i)||/^-.+/.test(i))u(i);else{let n=o.find((n=>n[0]===e));if(!n&&/^-./.test(e)){const s=e[e.length-1];n=o.find((n=>n[0]===s))}n||t.push(i)}}const i={};for(const n of o){let e=n[0].replace(/^-{1,2}/g,""),s=n[1];e.startsWith("no-")&&[void 0,!0].includes(s)&&(e=e.slice(3),s=!1),i[e]=l(s)}return{flags:i,_:t.map((n=>l(n))),extras:e.map((n=>l(n)))}}(n.slice(t)),S=v.flags;if((S.debugArgs||S.da)&&r(v),S.version||S.v)r(`${d} version:${a}`);else{if(!S.help&&!S.h)return e.notOnlyFlags||f.notOnlyFlags?f(v):f(S);r(`${s}`)}}};((n={})=>e=>(n.option&&(e.option={...e.option,...n.option}),"version,ns,autoSubCmd,autoSubNs".split(",").forEach((s=>{n[s]&&(e.option[s]=n[s])})),e.entry(n),e))(s)(u),u.run(process.argv);
