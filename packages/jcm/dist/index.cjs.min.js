/**
  * jcm v0.0.1
  * (c) 2018-2022 ymc
  * @license MIT
  */
"use strict";var t=require("node:fs"),e=require("node:path");const n=(t,e="")=>{const n=new RegExp(` *${t}:.*`,"ig"),s=e.match(n);return s?s[0].replace(new RegExp(` *${t}:`,"i"),""):""},{log:s}=console;class o{constructor(){this.list=[],this.index=-1,this.freeze=!1}use(t={},e){let{list:n,index:s}=this;const o=!e;return o||s==e?s++:s<e&&(s=e),this.index=s,s=o?s:e,t&&(n[s]=t),this}load(){const{list:t}=this;let e={};for(let n=0;n<t.length;n++){const s=t[n];s&&(e={...e,...s})}const{freeze:n}=this;return n?Object.freeze(e):e}}class i{constructor(){this.data={},this.option={splitChar:"."}}bind(t){return t&&(this.data=t),this}split(t="."){return t&&(this.option.splitChar=t),this}conf(t="",e){if(!t)return this;let n,{data:o,option:i}=this;n=(t=t.split(i.splitChar))[t.length-1];const{length:r}=t;for(let e=0;e<r-1;e++){const n=t[e];o[n]||(o[n]={}),o=o[n]}return null==e?o[n]:(o[n]=e,s(`set ${n} ${e}`),this)}}new o,new i;const{log:r}=console;const l=new class{constructor(){this.option={},this.tool={}}getFileLoc(t){const{option:e,tool:n}=this,s=t||e.name,o=e;return o.usd||o.u?n.joinPath(n.getUserHome(),s):o.crd||o.c?s:o.wkd?(r(s,e),n.joinPath(o.wkd,s)):s}getFileLocList(t){let e=[];const{option:n}=this;return e=[["usd","u"],["crd","c"],["wkd"]].map((e=>{let s,o,i;for(let t=0;t<e.length;t++){const r=e[t];if(n[r]){o=n[r],s=r,i=!0;break}}return!!i&&(this.option={[`${s}`]:o,name:n.name},this.getFileLoc(t))})).filter((t=>t)),this.option=n,e}magicReadConfig(t=".ymcrc.json"){const{tool:e}=this;return function(t=[".ymcrc.json"],e){const n=new o;for(let s=0;s<t.length;s++){const o=t[s];n.use(e(o))}return n.load()}(this.getFileLocList(t),e.readJson)}magicDefineConfig(t,e,n){const s=new i;return s.bind(t),s.split("/"),s.conf(e,n),s.data}getJsonVal(t="key",e="val"){const{data:n}=this;let s;if(t)return s=n[e],r(s),s}setJsonVal(t,e,n){const{option:s,tool:o}=this,i=this,{name:r}=s;let l,c;l=i.magicReadConfig(r),t&&n&&(l=i.magicDefineConfig(l,t,e)),c=i.getFileLocList(r),c=c[c.length-1];const a=o.parsePath(c).dir;a&&o.addDirs(a),s.dryrun||o.saveJson(c,l),this.data=l}comEntry(t){const{option:e,tool:n}=this,{name:s}=e;let o={};let i,l,c;if("cnf"==t){const n=Object.keys(e),s="name|wkd|usd|crd|w|u|c".split("|");i=n.filter((t=>!s.includes(t)))[0],l=e[i],c=i in e,t=c?"add":"get"}else i=e.key,l=e.val,c="val"in e;switch(t){case"add":this.setJsonVal(i,l,c);break;case"del":break;default:o=this.magicReadConfig(s),this.getJsonVal(i,l),r("[info] info data:"),r(o)}return o}};const c=function n(s){return!!t.existsSync(s)||(n(e.dirname(s))?(t.mkdirSync(s),!0):void 0)},a=t.rmdirSync;function u(e,n={}){let s;try{s=t.readFileSync(e),s=JSON.parse(s)}catch(t){s=n}return s}function d(e,n){t.writeFileSync(e,JSON.stringify(n,null,2))}function h(){return process.env["win32"==process.platform?"USERPROFILE":"HOME"]}const{log:f}=console,g={name:".ymcrc.json",wkd:"packages/noop",usd:!1,crd:!0},p=(t={})=>{p.debug&&f("[info] run cmd with: ns"),p.debug&&f("[info] hello ns"),p.debug&&f("[info] log cli option:"),p.debug&&f(t)},b=(t="add")=>(n={})=>{let s;if(p.debug&&f(`[info] run cmd with: ns ${t}`),p.debug&&f(`[info] hello ${t}`),g.wkd="",s=p.notOnlyFlags?{...g,...n.flags}:{...g,...n},p.debug&&f("[info] log now flags:"),p.debug&&f(s),l.option=s,l.tool={parsePath:e.parse,joinPath:e.join,addDirs:c,delDirs:a,readJson:u,saveJson:d,getUserHome:h},"loc"==t){const t=l.getFileLocList();return f("[info] cnf file list:"),f(t),f("[info] the last file:"),void f(t[t.length-1])}return l.comEntry(t)},m=new class{constructor(){}entrys(t){return t?(this.context=t,this):this.context}bind(t="",e=(()=>{}),n=""){const s=this.entrys();t.split("|").forEach((t=>{let o;if("call"===n.toLowerCase())o=e(t);s[t]=o}))}};m.entrys(p).bind("add|del|put|get",b,"call"),m.entrys(p).bind("loc|cnf",b,"call");const v=((t="ns")=>`cnf gen for ymc repo\n  mgnt cnf file\n  usage:ns [subcmd] [option]\n    ${t} -h\n    ${t} -v\n\n  subns:loc|cnf\n  subcmd:add|del|get\n    add - add des file\n    del - del des file\n    get - get des file\n  option:\n    -n,--name <filename> cnf file name (default:.ymcrc.json )\n    -w,--wkd <dir> set working(packages/libname) dir\n    -u,--usd use user dir\n    -c,--crd use current(project) dir\n    -h,--help get help\n    -v,--version get version\n`)("jcm"),y=((t="npm-bin",e="1.0.0",s="")=>{let o={};return o={...o,version:e,ns:t,autoSubCmd:n("subcmd",s),autoSubNs:n("subns",s)},o})("jcm","1.0.0",v);p.usage=v,p.option=y,p.cnf.enableZeroOption=!0,p.enableZeroOption=!0,p.notOnlyFlags=!0,p.debug=!0;const w=t=>!!["true",!0].includes(t)||!["false",!1].includes(t)&&(Number(t)?Number(t):t),{log:S}=console;const $=new class{constructor(){this.option={helpmsg:"usage:ns option",argvIndexS:2,enbaleSubCmd:!1,subcmd:"",allowAutoSubCmd:!0,autoSubCmd:"",version:"1.0.0",ns:"ycs",enbaleSubNs:!1,subns:"",allowAutoSubNs:!0,autoSubNs:""}}ns(t="ns"){return this.option.ns=t,this}version(t="1.0.0"){return this.option.version=t,this}entry(t={}){return this.option.entrys=t,this}autosubcmd(t=""){return this.option.autoSubCmd=t,this}autosubns(t=""){return this.option.autoSubNs=t,this}nanoparse(t=(()=>{})){return this.option.nanoparse=t,this}run(t){let{entrys:e,helpmsg:n,argvIndexS:s,enbaleSubCmd:o,subcmd:i,allowAutoSubCmd:r,autoSubCmd:l,version:c,ns:a,enbaleSubNs:u,subns:d,allowAutoSubNs:h,autoSubNs:f}=this.option;!u&&h&&f&&(f=Array.isArray(f)?f:f.split("|"),u=f.includes(t[s])),u&&(d=t[s],s++,n=n.replace(/option$/,"subns option")),!o&&r&&l&&(l=Array.isArray(l)?l:l.split("|"),o=l.includes(t[s])),o&&(i=t[s],s++,n=n.replace(/option$/,"subcmd option"));let g=e;if(n=e.usage,u&&d){if(!g[d])return S(`${n}`),void S(`todo:subns:${d}`);n=g[d].usage?g[d].usage:n,c=g[d].version?g[d].version:c,g=g[d]?g[d]:()=>{}}if(o&&i){if(!g[i])return S(`${n}`),void S(`todo:subcmd:${i}`);n=g[i].usage?g[i].usage:n,c=g[i].version?g[i].version:c,g=g[i]?g[i]:()=>{}}let p=t.length<=s;if(e.enableZeroOption&&(p=t.length<s),g.enableZeroOption&&(p=t.length<s),p)return S(`${n}`),void S("error:invalid argv length");const b=function(t){let e=[],n=t;const s=[];t.includes("--")&&(e=t.slice(t.indexOf("--")+1),n=t.slice(0,t.indexOf("--")));const o=[];for(let t=0;t<n.length;t++){const e=n[t-1],i=n[t],r=n[t+1],l=r&&!/^--.+/.test(r)&&!/^-.+/.test(r),c=t=>{o.push([t,!l||r])};if(/^--.+=/.test(i)||/^-.=/.test(i))o.push(i.split("="));else if(/^-[^-].*/.test(i)){let t=i;if(t.includes("=")){const e=t.indexOf("=");o.push([t.slice(e-1,e),t.slice(e+1,e+2)]),t=t.slice(0,e-1)+t.slice(e+2)}for(const e of t.slice(1).split("").slice(0,-1))o.push([e,!0]);c(t[t.length-1])}else if(/^--.+/.test(i)||/^-.+/.test(i))c(i);else{let t=o.find((t=>t[0]===e));if(!t&&/^-./.test(e)){const n=e[e.length-1];t=o.find((t=>t[0]===n))}t||s.push(i)}}const i={};for(const t of o){let e=t[0].replace(/^-{1,2}/g,""),n=t[1];e.startsWith("no-")&&[void 0,!0].includes(n)&&(e=e.slice(3),n=!1),i[e]=w(n)}return{flags:i,_:s.map((t=>w(t))),extras:e.map((t=>w(t)))}}(t.slice(s)),m=b.flags;if((m.debugArgs||m.da)&&S(b),m.version||m.v)S(`${a} version:${c}`);else{if(!m.help&&!m.h)return e.notOnlyFlags||g.notOnlyFlags?g(b):g(m);S(`${n}`)}}};((t={})=>e=>(t.option&&(e.option={...e.option,...t.option}),"version,ns,autoSubCmd,autoSubNs".split(",").forEach((n=>{t[n]&&(e.option[n]=t[n])})),e.entry(t),e))(p)($),$.run(process.argv);
