/**
  * linPkgFile v1.0.0
  * (c) 2018-2022 ymc
  * @license MIT
  */
import{exec as t}from"@ymc/run-bash";export{exec,execOpts}from"@ymc/run-bash";import{camelize as n}from"@ymc/extend-string";import{jsonstream as o}from"@ymc/json-stream-io";export{jsonstream}from"@ymc/json-stream-io";const{log:e}=console;function r(t,o={}){let e=function(t){const n=t.split(/\/?\\|\//);return n[n.length-1]}(t);const r={trim:!0,...o};return r.trim&&(e=e.trim()),r.camelize&&(e=n(e)),e}function i(t){return function(t,n="/"){const o=t.split(/\/?\\|\//);return o.slice(0,o.length-1).join(n)}(t)}function s(t,n="done",o="fail"){let e=n;return t&&(e=o),e}async function c(n,o){e(`[info] run cmd: ${n}`);const{stderr:r,stdout:i}=await t(n,o);return r&&e(r),e(i),s(r||i,"done","fail")}function a(t,n,o,e){return e.some((n=>n.name===t))?e.forEach((e=>{e.name===t&&(e[n]=o)})):e.push({name:t,[`${n}`]:o}),e}async function m(t={}){const n={key:"lin_state",state:"todo",storeAt:"pkgs-info.json",...t};let r=n.pkgLoc;e("[info] set lint state in store"),o.init(`${n.pkgLoc}/package.json`);const i=await o.read({});r=n.storeAt,o.init(`${r}`);const s=await o.read([]);a(i.name,n.key,n.state,s),await o.write(s),e(`[info] out: ${r}`)}export{s as getFailOrDone,r as getLibNameFromPath,i as getPackagesLocFromPath,a as putPkgsInfo,c as runeslint,m as setLinState};
