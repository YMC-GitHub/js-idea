"use strict";function e(e){return!!["true",!0].includes(e)||!["false",!1].includes(e)&&(Number(e)?Number(e):e)}module.exports=function(s){let t=[],i=s;const l=[];s.includes("--")&&(t=s.slice(s.indexOf("--")+1),i=s.slice(0,s.indexOf("--")));const n=[];for(let e=0;e<i.length;e++){const s=i[e-1],t=i[e],c=i[e+1],o=c&&!/^--.+/.test(c)&&!/^-.+/.test(c),f=e=>{n.push([e,!o||c])};if(/^--.+=/.test(t)||/^-.=/.test(t))n.push(t.split("="));else if(/^-[^-].*/.test(t)){let e=t;if(e.includes("=")){const s=e.indexOf("=");n.push([e.slice(s-1,s),e.slice(s+1,s+2)]),e=e.slice(0,s-1)+e.slice(s+2)}const s=e.slice(1).split("").slice(0,-1);for(const e of s)n.push([e,!0]);f(e[e.length-1])}else if(/^--.+/.test(t)||/^-.+/.test(t))f(t);else{let e=n.find((e=>e[0]===s));if(!e&&/^-./.test(s)){const t=s[s.length-1];e=n.find((e=>e[0]===t))}e||l.push(t)}}const c={};for(const s of n){let t=s[0].replace(/^-{1,2}/g,""),i=s[1];t.startsWith("no-")&&[void 0,!0].includes(i)&&(t=t.slice(3),i=!1),c[t]=e(i)}return{flags:c,_:l.map((s=>e(s))),extras:t.map((s=>e(s)))}};
