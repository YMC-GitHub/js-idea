"use strict";
/**
  * limitAsyncHandle v1.0.0
  * (c) 2018-2022 ymc
  * @license MIT
  */const{log:t}=console;class e{constructor(t){this.init(t)}init(t){return this._max=t,this._count=0,this._taskQueue=[],this._debug=!1,this._cb=null,this}call(t,...e){return new Promise(((s,n)=>{const i=this._createTask(t,e,s,n);this._count>=this._max?this._taskQueue.push(i):i()}))}_createTask(t,e,s,n){return()=>{t(...e).then(s).catch(n).finally((()=>{this._next()})),this._nextTick()}}_next(){if(this._count-=1,this._taskQueue.length){this._taskQueue.shift()()}else this._debug&&t("task count = ",this._count),this._cb&&this._cb()}_nextTick(){this._count+=1,this._debug&&t("task count = ",this._count)}}new e;
/**
  * kindOf v1.0.0
  * (c) 2018-2022 ymc
  * @license MIT
  */
const{toString:s}=Object.prototype,n=(i=Object.create(null),t=>{const e=s.call(t);return i[e]||(i[e]=e.slice(8,-1).toLowerCase())});var i;module.exports=function(t,s){return new Promise(((i,c)=>{const o=s||t.length,u=new e(o),h=[],r=e=>{let s=t[e];return"asyncfunction"===n(s)?s=s():"function"===n(s)&&(s=Promise.resolve(s())),s.then((t=>{u._debug?h[e]={index:e,data:t,state:"ok"}:h[e]=t}),(t=>{u._debug?h[e]={index:e,state:"no",error:t}:h[e]=t})).finally((()=>{u._cb=()=>{
//! this._taskQueue.length && this._count===0
0===u._count&&i(h)}}))};for(let e=0;e<t.length;e+=1)u.call(r,e)}))};
