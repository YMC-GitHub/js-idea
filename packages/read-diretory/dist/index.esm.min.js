/**
  * readDiretory v0.0.1
  * (c) 2018-2022 ymc
  * @license MIT
  */
import{statSync as e,readFileSync as t,readdirSync as r}from"node:fs";import{basename as n,join as o}from"node:path";const{log:i}=console,u=t=>e(t).isDirectory();function f(e){if(!e)return!1;const t=typeof e;return!["boolean","string","number","function"].some((e=>e===t))&&!("object"!==t||!e.test)}function s(e){return"file_text"===e}function c(e){console.log(`found in:${e}`)}const l=[];function d(p,x){let[g,m]=function(e){let t,r;if(!e)return[];if(f(e))t=e,r={parsed:!0,regexp:t},i(e,t,f(e));else{if(!f(e.regexp))return[];t=e.regexp,r=e,r.parsed=!0}return[t,r]}(x);if(!g||!m)return l;if(m={mode:"file",...m},!u(p)&&("file"!==m.mode&&!s(m.mode)))return l;const a=n(p);if(function(e){return Array.isArray(e)}(m.excludes)&&m.excludes.includes(a))return l;if(m.excludesRegexp&&m.excludesRegexp.test(a))return l;if(g.test(a)&&!s(m.mode))return m.log&&c(p),l.push(p),l;if(s(m.mode)&&e(p).isFile()){const e=t(p);if(m.fileTextRegexp&&m.fileTextRegexp.test(e))return m.log&&c(p),l.push(p),l}if(!u(p))return l;const h=r(p);return h.length>0&&h.forEach((e=>{d(o(p,e),m)})),l}export{d as default};
