/**
  * runBash v0.0.3
  * (c) 2018-2022 ymc
  * @license MIT
  */
import{exec as e}from"node:child_process";const n=e=>(n,r="cp936",o="binary")=>(e.skipDecodeWarning=!0,e.decode(Buffer.from(n,o),r)),r=(e,r)=>{r.encoding="buffer",r.iconvDesEncoding="cp936",r.iconvSrcEncoding="binary",r.fixUnreadbleCode=n(e)};function o(e){return e.split(/\r?\n/).map((e=>e.trim())).filter((e=>e)).join("\n")}const c=(n,r,c)=>new Promise(((i,t)=>{c||(c=r,r=n,n="");const d=((e,n=" ")=>Array.isArray(e)?e.join(n):e)(r);(c.exec?c.exec:e)(`${n=n?`${n} ${d}`:`${d}`}`,c,((e,n,r)=>{const{fixUnreadbleCode:d}=c;if(d){const{iconvDesEncoding:e,iconvSrcEncoding:o}=c;n&&(n=d(n,e,o)),r&&(r=d(r,e,o))}e&&c.exitWhenErr&&t(e),c.noTrimOut||(n=o(n),r=o(r)),c.rejectStderr&&(r&&t(e),i(n)),i({stdout:n,stderr:r})}))})),i={exec:e};export{n as defFixUnreadbleCode,c as exec,i as execOpts,r as setExecOptsForIconv};
