/**
  * tesPkgFile v1.0.0
  * (c) 2018-2022 ymc
  * @license MIT
  */
import{baseParam as t}from"@ymc/cli-preset-param";import{getBuiltinConfig as o,getCliFlags as n}from"@ymc/cli-param";import{exec as e,execOpts as s}from"@ymc/run-bash";import{jsonstream as a}from"@ymc/json-stream-io";const{log:i}=console;function c(){return[...t(),{name:"--pkg-loc",type:"string",value:"./packages/noop",desc:"the location of pkg"},{name:"--jest-cmd",type:"string",value:"npx jest",desc:"the cmd of jest"},{name:"--jest-cnf-loc",type:"string",value:"test/unit/jest.config.json",desc:"the location of jest config"},{name:"--run-cmd",type:"boolean",value:!1,desc:"run jest cmd or not"}]}async function r(t={}){const r={...o(c()),...n(t)};i(`[task] run unit test for pkg ${r.pkgLoc}`);const f=`${r.jestCmd} ${r.pkgLoc} --config=${r.jestCnfLoc} --color --passWithNoTests`;if(r.runCmd){const t=await async function(t,o){i(`[info] run cmd: ${t}`);const{stderr:n,stdout:s}=await e(t,o);n&&i(n),i(s);const a="todo,passing,fail".split(",");let[,c]=a;return n&&/FAIL/g.test(n)?[,,c]=a:s.indexOf("No tests found, exiting with code 0")>=0&&([c]=a),i(`[info] ${c} unit test`),function(t,o="done",n="fail"){let e=n;return!0&&(e=o),e}(0,c,"fail")}(f,s);await async function(t={}){const o={key:"lin_state",state:"todo",storeAt:"pkgs-info.json",...t};let n=o.pkgLoc;i("[info] set lint state in store"),a.init(`${o.pkgLoc}/package.json`);const e=await a.read({});n=o.storeAt,a.init(`${n}`);const s=await a.read([]);var c,r,f,m;c=e.name,r=o.key,f=o.state,(m=s).some((t=>t.name===c))?m.forEach((t=>{t.name===c&&(t[r]=f)})):m.push({name:c,[`${r}`]:f}),await a.write(s),i(`[info] out: ${n}`)}({pkgLoc:r.pkgLoc,key:"tes_state",state:t,storeAt:"pkgs-info.json"})}return f}export{r as main,c as param};
