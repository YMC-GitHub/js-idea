/**
  * tesPkgFile v1.0.0
  * (c) 2018-2022 ymc
  * @license MIT
  */
import{baseParam as t}from"@ymc/cli-preset-param";import{getBuiltinConfig as o,getCliFlags as n}from"@ymc/cli-param";import{exec as e,execOpts as s}from"@ymc/run-bash";import{jsonstream as a}from"@ymc/json-stream-io";const{log:c}=console;function i(){return[...t(),{name:"--pkg-loc",type:"string",value:"./packages/noop",desc:"the location of pkg"},{name:"--jest-cmd",type:"string",value:"npx jest",desc:"the cmd of jest"},{name:"--jest-cnf-loc",type:"string",value:"test/unit/jest.config.json",desc:"the location of jest config"},{name:"--run-cmd",type:"boolean",value:!1,desc:"run jest cmd or not"}]}async function r(t={}){const r={...o(i()),...n(t)};c(`[task] run unit test for pkg ${r.pkgLoc}`);const m=`${r.jestCmd} ${r.pkgLoc} --config=${r.jestCnfLoc} --color --passWithNoTests`;if(r.runCmd){const t=await async function(t,o){c(`[info] run cmd: ${t}`);const{stderr:n,stdout:s}=await e(t,o);return n&&c(n),c(s),function(t,o="done",n="fail"){let e=o;return t&&(e=n),e}(n||s,"done","fail")}(m,s);await async function(t={}){const o={key:"lin_state",state:"todo",storeAt:"pkgs-info.json",...t};let n=o.pkgLoc;c("[info] set lint state in store"),a.init(`${o.pkgLoc}/package.json`);const e=await a.read({});n=o.storeAt,a.init(`${n}`);const s=await a.read([]);var i,r,m,p;i=e.name,r=o.key,m=o.state,(p=s).some((t=>t.name===i))?p.forEach((t=>{t.name===i&&(t[r]=m)})):p.push({name:i,[`${r}`]:m}),await a.write(s),c(`[info] out: ${n}`)}({pkgLoc:r.pkgLoc,key:"tes_state",state:t,storeAt:"pkgs-info.json"})}return m}export{r as main,i as param};
