/**
  * textStreamIo v1.0.0
  * (c) 2018-2022 ymc
  * @license MIT
  */
import{createReadStream as t,createWriteStream as e}from"node:fs";
/**
  * streamIo v1.0.0
  * (c) 2018-2022 ymc
  * @license MIT
  */class n{constructor(t="CHANGELO.md"){this.init(t)}async read(e=""){const{file:n}=this;let a,r;try{a=t(n.name),r=await(i=a,new Promise(((t,e)=>{let n="";i.on("data",(t=>{n+=t.toString()})).on("end",(()=>{t(n)})).on("error",e)})))}catch(t){r=e}var i;return n.data=r,r}async write(t){const{file:n,option:a}=this;let r,i,o;switch(r=e(n.name),i=n.data,a.writemode){case"override":o=`${t}`;break;case"append":o=`${i}\n${t}`;break;default:o=`${t}\n${i}`}n.data=o,await function({stream:t,data:e}){return new Promise(((n,a)=>{t.write(e,"utf-8"),t.end(),t.on("finish",(()=>{n(e)})).on("error",a)}))}({stream:r,data:o})}init(t="CHANGELO.md",e=""){return this.file={name:t,data:e},this.option={},this}new(...t){return new n(...t)}}const a=new n;export{n as TextStream,a as textstream};
