/**
  * tplExp v1.0.0
  * (c) 2018-2022 ymc
  * @license MIT
  */
const e=/({|})|(\[|\])|(\(|\))/gi,a=(a,s=e)=>a.replace(s,"\\$&"),s=(s,t={})=>((e,s={})=>{const t={regexpOption:"ig",...s};let{openLabel:o,closeLabel:p,regexpOption:l}=t;return t.excapeSpecialChars&&(o=a(o,t.specialCharsReg),p=a(p,t.specialCharsReg)),new RegExp(`${o}${e}${p}`,l)})(s,{excapeSpecialChars:!0,specialCharsReg:e,...t});class t{constructor(e){this.init(e)}init(e={}){return this.option={openLabel:"{{",closeLabel:"}}",...e},this}defTplExp(e){const{option:a}=this,{openLabel:s,closeLabel:t}=a;return((e,a="{{",s="}}")=>`${a}${e}${s}`)(e,s,t)}getTplReg(e){const{option:a}=this,{openLabel:t,closeLabel:o,excapeSpecialChars:p,specialCharsReg:l}=a;return s(e,{openLabel:t,closeLabel:o,excapeSpecialChars:p,specialCharsReg:l})}customLabel(e,a){const{option:s}=this;return this.option={...s,openLabel:e,closeLabel:a},this}tag(...e){return new t(...e)}}const o=new t;export{t as Tag,o as tag};
